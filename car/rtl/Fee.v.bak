// 定义一个名为 Fee 的模块
// 该模块用于计算车费
module Fee(
    // 输入时钟信号
    input wire clk,
    // 输入重置信号
    input wire reset,
    // 输入等待红灯信号
    input wire waitL,
    // 输入暂停信号
    input wire pause,
    // 输入计时使能信号
    input wire time_enable,
    // 输入行驶距离，最大为 1023
    input wire [9:0] distance,
    // 输入开始行驶信号
    input wire start,
    // 输出车费，最大为 1023
    output reg [9:0] fee
);
    // 初始化车费为 0
    initial begin fee <= 10'b0; end
    // 定义起步价为 60 元
    parameter s_fee = 10'd60;
    // 声明一个时序逻辑块，响应时钟上升沿和重置信号
    always @(posedge reset or posedge clk)
    begin
        // 如果重置信号为 1
        if(reset)
            begin
                // 车费清零
                fee <= 16'd0;
            end
        // 如果开始行驶信号为 1，且不等待红灯且未暂停
        else if(start && !waitL && !pause)
            begin
                // 如果行驶距离小于等于 30 公里
                if(distance <= 30)
                    begin
                        // 车费为起步价
                        fee <= s_fee;
                    end
                // 如果车费小于 200 元且行驶距离大于 30 公里
                else if(fee < 10'd200)
                    begin
                        // 计算车费，每 12 公里加价 1 元
                        fee <= s_fee + (12 * (distance - 30)) / 10;
                        // 如果车费超过 200 元
                        if(fee > 10'd200)
                            begin
                                // 计算车费，每 18 公里加价 1 元
                                fee <= s_fee + (18 * (distance - 30)) / 10;
                            end
                    end
                // 如果车费大于等于 200 元且行驶距离大于 30 公里
                else
                    begin
                        // 计算车费，每 18 公里加价 1 元
                        fee <= s_fee + (18 * (distance - 30)) / 10;
                    end
            end
        // 如果计时使能信号为 1
        else if(time_enable)
            begin
                // 每 5 秒加价 1 元
                fee <= fee + 10'd5;
            end
    end
endmodule
