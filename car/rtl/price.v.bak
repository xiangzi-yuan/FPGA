// 设置起步价和单价模块
module price(
   input wire p_m,              // 设置起步价还是单价的选择信号，1表示起步价，0表示单价
   input wire clk,              // 输入时钟信号
   input wire reset,            // 输入复位信号
	input wire start,            // 启动信号
   
   output reg [3:0] s_fee,      // 起步价，共10位
   output reg [3:0] g_fee       // 单价，共10位            
);

	always @(posedge clk or posedge reset) begin    // 时序逻辑模块，检测时钟和复位信号的变化
			 if (reset)
			 begin
				if (!start)
				begin
				  s_fee <= 10'd8;
				  g_fee <= 10'd3;
				end
			 end
			//  else if (!start && p_m && key_out)
			// 	  s_fee <= key_out;
			 
			//  else if (!start && !p_m && key_out)
			// 	  g_fee <= key_out;
			//  else                 // 保持价格不变
			// 	 begin
			// 		  s_fee <= s_fee;
			// 		  g_fee <= g_fee;  
			// 	 end		  
	end
endmodule